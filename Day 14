package prac;

import java.util.Scanner;

public class Exceptions {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);

		System.out.println("Enter 1 no.");
		int x = sc.nextInt();

		System.out.println("Enter 2 no.");
		int y = sc.nextInt();

		int z = x / y;

		System.out.println(z);

	}
}







package prac;

import java.util.Scanner;

public class ExceptionsEx {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);

		System.out.println("Enter 1 no.");
		int x = sc.nextInt();

		System.out.println("Enter 2 no.");
		int y = sc.nextInt();

		try {
			int z = x / y;

			System.out.println(z);
		} catch (Exception e) {
			System.out.println("Error");
		}

	}
}














package prac;

public class ExceptionEx1 {
	public static void main(String[] args) {
		try {

			int a[] = new int[5];
			a[4] = 30 / 0;
			String s = "100";
			System.out.println(s.length());
			int x = Integer.parseInt(s);
			System.out.println("no error  " + a[4] + "  " + x);

		} catch (ArrayIndexOutOfBoundsException ae) {
			System.out.println("Enter valid index");
		} catch (ArithmeticException ae) {
			System.out.println("Don't enter denominotor as zero");
		} catch (NumberFormatException e) {
			System.out.println("We cant convert String to number");
		} catch (Exception ae) {
			System.out.println("Unable to find length of the String");
		} finally {
			System.out.println("Executes every time to close the connection");
		}
		System.out.println("Remaining 100000 lines of code");
	}
}













public class CreateThrowsException {
    public void ownException(String str){
        if(str == null)
        throw new NumberFormatException("Our own NumberFormatException exception");
        else{
            System.out.println("String is:"+str);
        }
    }
    public void ownException1(int number){
        if(number < 10)
        throw new ArithmeticException("Our own ArithmeticException exception!!");
        else
        {
            System.out.println("The number is: "+number);
        }
    }
    public static void main(String[] args) {
        CreateThrowsException cex = new CreateThrowsException();
        cex.ownException("juned");
        cex.ownException1(5);
    }
}








class MyExceptionn extends Exception{
    private int marks;
    public MyExceptionn(int marks){
        this.marks = marks;
    }
    public String toString(){
        return "You are failed!!! Try again!!!";
    }

}
public class MarksException {
    static void validate(int marks) throws MyExceptionn{
        if(marks < 40)
        throw new MyExceptionn(marks);
        else
        System.out.println("You are passed!!!");
    }  
    public static void main(String[] args) throws MyExceptionn {
        MarksException.validate(23);
        System.out.println("This code will executed");
    } 
}




